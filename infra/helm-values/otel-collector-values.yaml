mode: daemonset
replicaCount: 1

presets:
  logsCollection:
    enabled: true

config:
  receivers:
    filelog:
      include: [/var/log/containers/*.log]
      start_at: beginning
      include_file_path: true
      include_file_name: false
      operators:
        - type: regex_parser
          regex: '^(?P<time>\d{4}-\d{2}-\d{2}T[^ ]+) (?P<stream>stdout|stderr) (?P<flag>P|F) (?P<log>.*)$'
          timestamp:
            parse_from: attributes.time
            layout_type: gotime
            layout: 2006-01-02T15:04:05.999999999Z07:00
    otlp:
      protocols:
        grpc: {}
        http: {}
  processors:
    k8sattributes:
      auth_type: serviceAccount
      passthrough: false
      filter:
        node_from_env_var: KUBE_NODE_NAME
      extract:
        metadata: [k8s.pod.name, k8s.namespace.name, k8s.container.name, k8s.pod.uid]
    resource:
      attributes:
        - action: upsert
          key: service.name
          value: sample-app
    batch: {}
  exporters:
    loki:
      endpoint: http://loki.observability.svc.cluster.local:3100/loki/api/v1/push
      labels:
        attributes:
          - k8s.namespace.name
          - k8s.pod.name
          - k8s.container.name
  service:
    pipelines:
      logs:
        receivers: [filelog, otlp]
        processors: [k8sattributes, resource, batch]
        exporters: [loki]

extraEnvs:
  - name: KUBE_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: LOG_LEVEL
    value: info

extraVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: containerlog
    hostPath:
      path: /var/lib/docker/containers
  - name: podslog
    hostPath:
      path: /var/log/pods

extraVolumeMounts:
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: containerlog
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: podslog
    mountPath: /var/log/pods
    readOnly: true
